
// don't use Art_cPKist and Alb_sPK_1cFKum to not confuse with the Alb_sPK_1cFKumSystem with a specific example

// TODO: implement CHECK of other types (BETWEEN, IN, LIKE, IS NULL, IS NOT NULL, etc)


// Genre_sPK - simple PK
 CREATE UPDATE-WINS TABLE Genre_sPK (
     style VARCHAR PRIMARY KEY,
     description LWW varchar
 )

// Art_cPK - composite PKs
CREATE UPDATE-WINS TABLE Art_cPK (
    name VARCHAR PRIMARY KEY
    country VARCHAR PRIMARY KEY,
    age LWW INT CHECK(age >= 0 AND age <= 100),
    ranking LWW INT CHECK(ranking >= 0 AND ranking <= 100),
 )


// Alb_sPK_1cFK - ref composite PKs
 CREATE UPDATE-WINS TABLE Alb_sPK_1cFK (
     title VARCHAR PRIMARY KEY,
     art_name VARCHAR FOREIGN KEY update-wins REFERENCES Art_cPK(name),
     art_country VARCHAR FOREIGN KEY update-wins REFERENCES Art_cPK(country),
     year LWW INT CHECK(year >= 1900 AND year <= 2022),
     price LWW INT CHECK(price >= 0 AND price <= 10000),
 )


// Song_sPK_2sFK- ref 2 Tables
 CREATE UPDATE-WINS TABLE Song_sPK_2sFK(
     s_title VARCHAR PRIMARY KEY,
     genr_style varchar FOREIGN KEY update-wins REFERENCES Genre_sPK(style),
     alb_title VARCHAR FOREIGN KEY update-wins REFERENCES Alb_sPK_1cFK(title),
     duration LWW INT CHECK(duration >= 0 AND duration <= 1000),
 )


// Song_View_cPK_1cFK_2sFKVIEW - ref 4 Tables && composite PKs
 CREATE UPDATE-WINS TABLE Song_View_cPK_1cFK_2sFK(
    // composite PK of this table
    sv_id int,
    sv_name VARCHAR,
    PRIMARY KEY (sv_id, sv_name),

    // ref tab with composite PK
    art_name VARCHAR FOREIGN KEY update-wins REFERENCES Art_cPK(name),
    art_country VARCHAR FOREIGN KEY update-wins REFERENCES Art_cPK(country),
    // ref 3 tables with single PK
    s_title VARCHAR FOREIGN KEY update-wins REFERENCES Song_sPK_2sFK(s_title),
    alb_title VARCHAR FOREIGN KEY update-wins REFERENCES Alb_sPK_1cFK(title),
    genr_style varchar FOREIGN KEY update-wins REFERENCES Genre_sPK(style),

    // more attributes
    duration LWW INT CHECK(duration >= 0 AND duration <= 1000),
 )

